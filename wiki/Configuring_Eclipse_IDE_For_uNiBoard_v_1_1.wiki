*_Article to Develop AVR programs on Eclipse IDE_*

*Steps to install Eclipse IDE:*

 1. Download Eclipse from for C/C++ developers as shown below:
    <img src="http://uniboard.googlecode.com/files/1_EclipseIDE.png"  width="200" height="85"/>

 2. Now Extract the package:

    Right click the package and open with Archive Manager and extract it to home directory as shown below:
    http://uniboard.googlecode.com/files/2_EclipseIDE.png

 3. Open the eclipse executable to the folder that you have extracted ~/eclipse/ as shown below:
    http://uniboard.googlecode.com/files/3_EclipseIDE.png

   If it displays the error than there is no JRE in your system, you will need to install it. Follow the steps given to install JRE or else skip the step.

 4. Run the following command on the prompt to install JRE as shown below:
  1. Open Applications > Accessories > Terminal
  2. Execute the command given below:
     thinklabs@thinklabs:~$ sudo aptitude install default-jre
 
    This will take some time to install.

    Now start eclipse again an Eclipse IDE will start as shown below:

    http://uniboard.googlecode.com/files/4_EclipseIDE.png


*Steps to install AVR Eclipse plugin:*

 Now close the Eclipse IDE and download the AVR Eclipse plugin from the link given below:

   http://avr-eclipse.sourceforge.net/

 Now go to download section and select direct download as shown below:
   http://uniboard.googlecode.com/files/5_EclipseIDE.png

 Once you have selected Direct download it will go to the sourceforge where plugin can be downloaded as shown below:
   http://uniboard.googlecode.com/files/6_EclipseIDE.png

 Be careful while extracting the zip files to the ~/eclispe folder.

 1. Open with the Archive manager and drag features folder and plugins to the eclipse folder individually as given below:

  1.1. Inside the Archive Manager you will see “.” folder, double click it and go to the features folder and select the folders as shown below and drag it to eclispe/features folder:
      http://uniboard.googlecode.com/files/7_EclipseIDE.png

  1.2. Similarly inside the Archive Manager, go for the plugins folder and select the folders/files as displayed  below and drag it to eclispe/plugins folder:
      http://uniboard.googlecode.com/files/8_EclipseIDE.png


*Steps to write down AVR programs on Eclipse IDE.*

 1. Open the eclipse executable as a root user, issue the command on the prompt as shown below:

   1. Open Applications > Accessories > Terminal

   2. Execute the command given below:
      thinklabs@thinklabs:~$ sudo ~/eclipse/eclipse

   3. It will popup the page as shown below:
      http://uniboard.googlecode.com/files/9_EclipseIDE.png

 2. Create a new project go to file menu > New > C Project
    http://uniboard.googlecode.com/files/10_EclipseIDE.png

 NOTE: If it doesnot display this “AVR GCC Toolchain plugins” than there AVR Eclipse plugin is missing, try to install it as given in the above section steps to install AVR Eclipse plugin.

 3. Write a new project name and click on next. It will ask for selection of CPU name and its frequency and click on finish.
    http://uniboard.googlecode.com/files/11_EclipseIDE.png

 4. Goto file menu > new > c source file and save it.

 5. Write down the code given below

 6. Select the active build configuration as Release
    Project menu > Build configurations > set active > 2 Release

 7. Now goto the project menu > Build All
    You can see that inside release folder executable binary is generated as shown below:
    http://uniboard.googlecode.com/files/12_EclipseIDE.png


*Steps to burn your program on uNiBoard v 1.1*

 Now if you want  to load the executable on uNiBoard v 1.1, you will need to setup the avrdude programmer.
 1. Goto the properties window of the project by right click on project and properties.

 2. Select AVR>Avrdude tab it will display window as shown below:
http://uniboard.googlecode.com/files/13_EclipseIDE.png

 3. Click on Edit and follow the steps given below:

  1. Configuration name as uNiBoard

  2. In programmer Harware select USBasp.

  3. In override default port -P   USB.

  4. Click on OK button to save the configuration.
     http://uniboard.googlecode.com/files/14_EclipseIDE.png

 4. Select programmer configuration as uNiBoard and click on Apply  button and OK button.
    http://uniboard.googlecode.com/files/15_EclipseIDE.png

 5. Now you can burn the program by selecting AVR menu > Upload project to Target Device.
    http://uniboard.googlecode.com/files/16_EclipseIDE.png